// This file was supplied by Prof. Marshall Long for ENAS 130.

#include <QApplication>
#include "classVertex.h"
#include "structPoly_classSolid.h"
#include "finalgraphics.h"
#include "finalgraphicswindow.h"
#include "ui_finalgraphicswindow.h" // will be automatically generated by Qt
                                    // and will appear in the build folder

extern QPixmap *thePixMap;

float scaledX, scaledY;
int mouseState = 0;

GraphicsWindow::GraphicsWindow(QWidget *parent) : QDialog(parent), ui(new Ui::GraphicsWindow)
{
    ui->setupUi(this);
}

GraphicsWindow::~GraphicsWindow()
{
    delete ui;
}

void GraphicsWindow::mousePressEvent(QMouseEvent *event)
{
    extern float xmin, ymin, xscalerange, yscalerange;
    extern int ymaxim;

        QPoint pos = event->pos();
        scaledX = pos.x()/xscalerange + xmin;
        scaledY = (ymaxim-pos.y())/yscalerange + ymin;

        if(event->button() == Qt::RightButton)
            mouseState = RIGHT_BUTTON;
        else if(event->button() == Qt::MiddleButton)
            mouseState = CENTER_BUTTON;
        else
            mouseState = LEFT_BUTTON;

        return;
}

void GraphicsWindow::mouseMoveEvent(QMouseEvent *event)
{
    extern float xmin, ymin, xscalerange, yscalerange;
    extern int ymaxim;

        QPoint pos = event->pos();
        scaledX = pos.x()/xscalerange + xmin;
        scaledY = (ymaxim-pos.y())/yscalerange + ymin;

        if(event->button() == Qt::RightButton)
            mouseState = RIGHT_MOVING;
        else if(event->button() == Qt::MiddleButton)
            mouseState = CENTER_MOVING;
        else
            mouseState = LEFT_MOVING;

        return;
}

void GraphicsWindow::paintEvent(QPaintEvent *)
{
    ui->drawArea->setPixmap(pixmap);
    ui->drawArea->show();

    return;
}

void GraphicsWindow::setupPixmap(int width, int height)
{
    pixmap = QPixmap(width, height);
    pixmap.fill(Qt::white);
    ui->drawArea->setPixmap(pixmap);
    ui->drawArea->show();
    thePixMap = &pixmap;

    return;
}
